apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend-deployment
  namespace: rushabh2390
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: rdddocker/summary_backend
        imagePullPolicy: Always
        resources:
          limits:
            memory: "512Mi"
            cpu: "1"
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  labels:
    app: fastapi-service
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 31000
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend-deployment
  namespace: rushabh2390
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: okteto-frontend-configmap
      containers:
      - name: frontend
        image: rdddocker/summary_frontend
        imagePullPolicy: Always
        resources:
          limits:
            memory: "512Mi"
            cpu: "1"
        ports:
        - containerPort: 80
        env:
        - name: VUE_APP_API_BACKEND
          value: fastapi-service
        - name: VUE_APP_TITLE
          value: kubernates runner
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/nginx/html/static/config.js
            subPath: config.js
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app: frontend-service
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: frontend